import pandas as pd
import matplotlib.pyplot as plt
from Connect_database import db_connection
import sqlite3
import streamlit as st

# python product_trend.py

def fetch_product_trend(conn,year,client_data_df,product_id):
    # input client_data_df generated by exacute_fetch_client_proportion()
    # get top 5 clients
    top_clients = client_data_df['Client'].tolist()
    # 'separator'.join(iterable)
    top_clients_str = "','".join(top_clients) # each item is saperated by "', '"
    
    client_sales_query = "SELECT date, client,quantity FROM sales_record WHERE date like '{}%'and id = '{}'and client in ('{}');"
    # SELECT date, client,quantity FROM sales_record WHERE id = '{}'and client in (亞得貿易有限公司', '東隆汽車材料行', '義祥汽車材料行', '嘉宏交通配件行', '洪琦汽車材料行)
    # ('{top_clients_str}'): {} is a placeholder for top_clients_str that contains 亞得貿易有限公司', '東隆汽車材料行', '義祥汽車材料行', '嘉宏交通配件行', '洪琦汽車材料行
    cursor = conn.cursor()
    cursor.execute(client_sales_query.format(year,product_id,top_clients_str))
    client_proportion_data = cursor.fetchall()
    client_sales_df = pd.DataFrame(client_proportion_data, columns=['date','Client', 'Quantity'])
    return client_sales_df





def exacute_fetch_product_trend(year,client_data_df_input, product_id):
    conn = db_connection() 
    if conn is not None:
        client_data_df = fetch_product_trend(conn,year,client_data_df_input,product_id)
        aggregated_df = client_data_df.groupby(['date', 'Client']).sum().reset_index()
        aggregated_df['date'] = pd.to_datetime(aggregated_df['date'])

        # Pivot the DataFrame so each client's quantities are in separate columns
        pivot_df = aggregated_df.pivot(index='date', columns='Client', values='Quantity').fillna(0)
        conn.close()
        return pivot_df
    else:
        print("Connection to database failed.")

def plot_product_trend(dataframe):
    st.line_chart(dataframe)


def main():
    
    result = exacute_fetch_product_trend('4AFE 44 B2')
    if result is not None:
        print(result)
    else:
        print("No data to display.")

if __name__ == "__main__":
    main()